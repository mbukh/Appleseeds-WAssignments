@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");

:root {
    /* https://lospec.com/palette-list/alexnompes-dragon-45 */
    --color1: #fffdf7;
    --color2: #fff6db;
    --color3: #f7e3ba;
    --color4: #e8b884;
    --color5: #e39562;
    --color6: #d67149;
    --color7: #c75038;
    --color8: #ba2929;
    --color9: #a10d32;
    --color10: #870034;
    --color11: #540332;
    --color12: #33002b;
    --color13: #5e003c;
    --color14: #700c6a;
    --color15: #6b188c;
    --color16: #642abd;
    --color17: #493fcc;
    --color18: #527fd9;
    --color19: #5faae3;
    --color20: #85dcf2;
    --color21: #c2fcfb;
    --color22: #f4fae0;
    --color23: #f5eca9;
    --color24: #e8e882;
    --color25: #cbd964;
    --color26: #a3c449;
    --color27: #599419;
    --color28: #34700a;
    --color29: #215903;
    --color30: #113300;
    --color31: #0d4726;
    --color32: #195938;
    --color33: #227843;
    --color34: #299e4c;
    --color35: #4bbd79;
    --color36: #6fd6a3;
    --color37: #a1f0d1;
    --color38: #ffffff;
    --color39: #d4d4d4;
    --color40: #a0a0a0;
    --color41: #6c6c6c;
    --color42: #383838;
    --color43: #272727;
    --color44: #161616;
    --color45: #090909;
}
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}
html,
body {
    width: 100vw;
    height: 100vh;
    font-family: "Press Start 2P", cursive;
    color: var(--color2);
    font-size: 16px;
    overflow: hidden;
}
.body-container {
    width: 100%;
    height: 100%;
    background: var(--color45);
    display: flex;
}

/* ============= */
/* ============= */
/*     MODAL     */
/* ============= */

#modal {
    display: none;
    position: fixed;
    z-index: 99;
    width: 100%;
    height: 100%;
    background: var(--color44);
}
#modal .container {
    margin: auto;
    width: max(400px, 50%);
    height: max(300px, 50%);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    align-content: center;
    gap: 50px;
}
#modal input,
#modal button {
    font-family: inherit;
    font-size: 2em;
    text-align: center;
    outline: none;
    border: none;
    background-color: var(--color43);
    color: var(--color1);
    width: 120px;
    height: 80px;
    cursor: pointer;
}
#modal button {
    padding: 10px;
    width: fit-content;
}

/* ============== */
/* ============== */
/*      GAME      */
/* ============== */

#dice-game {
    width: 100%;
    display: flex;
    justify-content: center;
}
#dice-game #players-container {
    width: 100%;
    display: flex;
}
#dice-game #players-container .player {
    --player-color: var(--color07);
    flex: 1;
    display: flex;
    flex-direction: column;
    opacity: 1;
    transition: opacity 0.5s ease-in-out;
}
#dice-game #players-container .player.inactive {
    opacity: 0.2;
}
#dice-game #players-container .roller-coaster {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    flex: 2;
}

#dice-game #players-container .player-control {
    font-size: min(min(5vw, 5vh), 2em);
    flex: 1;
    padding-block: 0.5em;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    align-content: center;
    /* gap: 0.5em; */
}

#dice-game #players-container .player-control > * {
    display: flex;
    justify-content: center;
    align-items: center;
    align-items: center;
    gap: 0.5em;
}

/* ================== */
/* ================== */
/*       Player       */
/* ================== */

.player-control .name {
    color: var(--color18);
    font-size: 80%;
    flex: 1;
}
#dice-game #players-container .player.inactive .player-control .name {
    color: var(--color1);
}

.player-control .current-score {
    flex: 1;
    padding-block: 0.5em;
}
.player-control .current-score.clear {
    opacity: 0;
    animation: blinker 0.25s cubic-bezier(0.5, 0, 1, 1) infinite alternate;
}
.player-control .score {
    font-size: 80%;
    flex: 1;
}
.player-control .wins {
    font-size: 60%;
    flex: 1;
}
.player-control .wins.update {
    opacity: 0;
    animation: blinker 0.25s cubic-bezier(0.5, 0, 1, 1) infinite alternate;
}

/* ================ */
/* ================ */
/*       Dice       */
/* ================ */
#dice {
    position: fixed;
    z-index: 10;
    top: 50%;
    left: 50%;
    background-color: #f4fae077;
    box-shadow: 0px 0px 10px var(--color42);
    border-radius: 1em;
    transform: translate(-50%, -50%);
    text-align: center;
    opacity: 0.3;
    transition: opacity 0.2s ease-in-out;
}
#dice.hide,
#dice.hide:hover {
    opacity: 0;
    z-index: -10;
    transition: opacity 0.5s linear;
}
#dice:hover {
    opacity: 1;
}
#dice .numbers {
    padding: 40px 30px;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    align-content: center;
    gap: 30px;
}
#dice .numbers span {
    text-shadow: 1px 1px 5px var(--color43);
}
#dice .diceNumber {
    display: flex;
    justify-content: center;
    align-items: center;
    align-content: center;
    height: 100px;
    width: 100px;
    padding: 8px 0 0 8px;
    border: 1px solid var(--color44);
    border-radius: 10px;
    font-size: 80px;
    text-shadow: 1px 1px 5px var(--color43);
}
#dice button {
    background-color: var(--color38);
    border-radius: 6px;
    border: none;
    color: var(--color43);
    font-weight: 600;
    padding: 10px;
    text-transform: uppercase;
    width: 100%;
    cursor: pointer;
    opacity: 1;
}

#dice button:hover {
    opacity: 0.6;
}
#dice button.wait,
#dice button.wait:hover {
    opacity: 0.1;
}
#dice #roll {
    border-radius: 6px 6px 0 0;
}
#dice #hold {
    border-radius: 0 0 6px 6px;
}

/* ================== */
/* ================== */
/* SVG path generator */
/* https://stackoverflow.com/questions/68512066/creating-random-svg-curves-in-javascript-while-avoiding-sharp-turns */
/* ================== */

.roller-coaster svg {
    position: absolute;
    stroke: rgba(102, 102, 102, 0.2);
    border-radius: 1rem;
    background-color: var(--player-color);
    filter: blur(1rem);
    animation-name: blur;
    animation-duration: 0.5s;
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 0.25rem;
    fill: none;
}
.roller-coaster img {
    filter: drop-shadow(0px 0px 1px white) drop-shadow(0px 0px 1px white)
        drop-shadow(0px 0px 1px white) drop-shadow(0px 0px 1px white);
}
.roller-coaster img.green {
    filter: invert(48%) sepia(79%) saturate(2400%) hue-rotate(16deg)
        brightness(118%) contrast(119%) drop-shadow(0px 0px 1px white)
        drop-shadow(0px 0px 1px white) drop-shadow(0px 0px 1px white)
        drop-shadow(0px 0px 1px white);
}
@keyframes blur {
    100% {
        filter: blur(0rem);
    }
}
.roller-coaster svg path {
    --dash-start: 20000000;
    --dash-end: 0;
    --stroke: none;
    filter: drop-shadow(3px 3px 2px rgb(0 0 0 / 0.4));
    stroke: var(--stroke);
    fill: none;
    animation: grow 5000s cubic-bezier(0.75, 0.25, 0.25, 1) forwards;
    stroke-dasharray: var(--dash-start);
    stroke-dashoffset: var(--dash-start);
}
.roller-coaster svg path.pattern {
    /* https://philiprogers.com/svgpatterns/#verticalstripes */
    /* http://iros.github.io/patternfills/sample_svg.html */
    fill: url("#patterns #fill-stripes");
}
.roller-coaster svg path.line {
    --stroke: #00ffbfbf;
}
.roller-coaster svg path.finish {
    --stroke: #ff4800bf;
    --dash-start: 0;
    animation: blinker 0.6s cubic-bezier(0.5, 0, 1, 1) infinite alternate;
    animation-play-state: paused;
    opacity: 0;
}
@keyframes grow {
    from {
        stroke-dashoffset: var(--dash-start);
    }
    to {
        stroke-dashoffset: var(--dash-end);
    }
}
@keyframes blinker {
    to {
        opacity: 1;
    }
}

/* ============ */
/* ============ */
/* Moving parts */
/* ============ */

.coaster {
    --size: 25px;
    --gap: 15px;
    --length: calc(3 * (var(--size) + var(--gap)));
    --place: 0;
    --offset: calc(var(--place) * (var(--size) + var(--gap)));
    --old-progress: 0; /* changes inline by JS */
    --progress: 0; /* changes inline by JS */

    --animate-from: calc(var(--old-progress) - var(--offset));
    --animate-to: calc(var(--progress) - var(--offset));
    position: absolute;
    /* left: 0;
    top: 0; */
    transform: translate(-50%, -50%);
    offset-path: path(var(--offset-path)); /* inline variable by JS; */
    offset-distance: calc(var(--old-progress) - var(--offset));
    /* https://cubic-bezier.com/#.6,0,.5,1.09 */
    animation: move 2500ms forwards cubic-bezier(0.9, 0, 0.5, 1.1);
    animation-delay: calc(var(--place) * 0.25s);
    width: var(--size);
    height: auto;
}
.delayed1 {
    --place: 1;
}
.delayed2 {
    --place: 2;
}
.delayed3 {
    --place: 3;
}
.delayed4 {
    --place: 4;
}
.delayed5 {
    --place: 5;
}
.delayed6 {
    --place: 6;
}
.delayed7 {
    --place: 7;
}
.delayed8 {
    --place: 8;
}
.delayed9 {
    --place: 9;
}
.delayed10 {
    --place: 10;
}
@keyframes move {
    from {
        offset-distance: var(--animate-from);
    }
    to {
        offset-distance: var(--animate-to);
    }
}
.coaster.free-fall {
    animation: free-fall 2.5s cubic-bezier(0.4, 0, 1, 1);
    animation-fill-mode: both;
    offset-path: none;
    transform: rotate(0deg);
    animation-delay: calc(var(--place) * 0.1s);
}
@keyframes free-fall {
    to {
        top: 110%;
        transform: rotate(360deg);
    }
}
